{"ast":null,"code":"var _jsxFileName = \"/Users/sarahvandenberghe/School/Devine/20192020/Integration-4/INT4_Group6/client/src/components/Controls/index.js\";\nimport * as React from 'react';\nimport { extend, useThree, useFrame } from 'react-three-fiber';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls';\nimport { FlyControls } from 'three/examples/jsm/controls/FlyControls';\nimport * as THREE from 'three'; // extend THREE to include TrackballControls\n\nextend({\n  TrackballControls\n}); // key code constants\n// const ALT_KEY = 18;\n// const CTRL_KEY = 17;\n// const CMD_KEY = 91;\n\nconst Controls = ({}) => {\n  const controls = React.useRef();\n  const {\n    camera,\n    gl\n  } = useThree(); // https://discourse.threejs.org/t/how-to-limit-pan-in-orbitcontrols-for-orthographiccamera/9061/15\n\n  var minPan = new THREE.Vector3(-2, -2, -15);\n  var maxPan = new THREE.Vector3(2, 2, 50);\n\n  var _v = new THREE.Vector3(); //  controls.addEventListener('change', function () {\n  //    _v.copy(controls.target);\n  //    controls.target.clamp(minPan, maxPan);\n  //    _v.sub(controls.target);\n  //    camera.position.sub(_v);\n  //  });\n\n\n  const limitControls = e => {\n    _v.copy(controls.target);\n\n    controls.target.clamp(minPan, maxPan);\n\n    _v.sub(controls.target);\n\n    camera.position.sub(_v);\n  };\n\n  useFrame(() => {\n    controls.current.update();\n  });\n  return /*#__PURE__*/React.createElement(\"trackballControls\", {\n    onChange: e => limitControls(e),\n    ref: controls,\n    args: [camera, gl.domElement],\n    dynamicDampingFactor: 0.5,\n    zoomSpeed: 0.5,\n    minDistance: 43,\n    maxDistance: 50,\n    mouseButtons: {\n      LEFT: THREE.MOUSE.PAN,\n      // make pan the default instead of rotate\n      MIDDLE: THREE.MOUSE.ZOOM,\n      RIGHT: THREE.MOUSE.ROTATE\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  });\n};\n\nexport default Controls;","map":{"version":3,"sources":["/Users/sarahvandenberghe/School/Devine/20192020/Integration-4/INT4_Group6/client/src/components/Controls/index.js"],"names":["React","extend","useThree","useFrame","TrackballControls","FlyControls","THREE","Controls","controls","useRef","camera","gl","minPan","Vector3","maxPan","_v","limitControls","e","copy","target","clamp","sub","position","current","update","domElement","LEFT","MOUSE","PAN","MIDDLE","ZOOM","RIGHT","ROTATE"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,QAA3B,QAA2C,mBAA3C;AACA,SAASC,iBAAT,QAAkC,+CAAlC;AACA,SAASC,WAAT,QAA4B,yCAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;;AACAL,MAAM,CAAC;AAAEG,EAAAA;AAAF,CAAD,CAAN,C,CAEA;AACA;AACA;AACA;;AAEA,MAAMG,QAAQ,GAAG,CAAC,EAAD,KAAS;AACtB,QAAMC,QAAQ,GAAGR,KAAK,CAACS,MAAN,EAAjB;AACA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAiBT,QAAQ,EAA/B,CAFsB,CAKtB;;AAEA,MAAIU,MAAM,GAAG,IAAIN,KAAK,CAACO,OAAV,CAAkB,CAAC,CAAnB,EAAsB,CAAC,CAAvB,EAA0B,CAAC,EAA3B,CAAb;AACA,MAAIC,MAAM,GAAG,IAAIR,KAAK,CAACO,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,EAAxB,CAAb;;AACA,MAAIE,EAAE,GAAG,IAAIT,KAAK,CAACO,OAAV,EAAT,CATsB,CAWtB;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMG,aAAa,GAAIC,CAAD,IAAO;AAC3BF,IAAAA,EAAE,CAACG,IAAH,CAAQV,QAAQ,CAACW,MAAjB;;AACAX,IAAAA,QAAQ,CAACW,MAAT,CAAgBC,KAAhB,CAAsBR,MAAtB,EAA8BE,MAA9B;;AACAC,IAAAA,EAAE,CAACM,GAAH,CAAOb,QAAQ,CAACW,MAAhB;;AACAT,IAAAA,MAAM,CAACY,QAAP,CAAgBD,GAAhB,CAAoBN,EAApB;AACD,GALD;;AAOFZ,EAAAA,QAAQ,CAAC,MAAM;AACbK,IAAAA,QAAQ,CAACe,OAAT,CAAiBC,MAAjB;AACD,GAFO,CAAR;AAKE,sBACE;AACE,IAAA,QAAQ,EAAGP,CAAD,IAAOD,aAAa,CAACC,CAAD,CADhC;AAEE,IAAA,GAAG,EAAET,QAFP;AAGE,IAAA,IAAI,EAAE,CAACE,MAAD,EAASC,EAAE,CAACc,UAAZ,CAHR;AAIE,IAAA,oBAAoB,EAAE,GAJxB;AAKE,IAAA,SAAS,EAAE,GALb;AAME,IAAA,WAAW,EAAE,EANf;AAOE,IAAA,WAAW,EAAE,EAPf;AAQE,IAAA,YAAY,EAAE;AACZC,MAAAA,IAAI,EAAEpB,KAAK,CAACqB,KAAN,CAAYC,GADN;AACW;AACvBC,MAAAA,MAAM,EAAEvB,KAAK,CAACqB,KAAN,CAAYG,IAFR;AAGZC,MAAAA,KAAK,EAAEzB,KAAK,CAACqB,KAAN,CAAYK;AAHP,KARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAgBH,CA9CD;;AAgDA,eAAezB,QAAf","sourcesContent":["import * as React from 'react';\nimport { extend, useThree, useFrame } from 'react-three-fiber';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls';\nimport { FlyControls } from 'three/examples/jsm/controls/FlyControls';\nimport * as THREE from 'three';\n\n// extend THREE to include TrackballControls\nextend({ TrackballControls });\n\n// key code constants\n// const ALT_KEY = 18;\n// const CTRL_KEY = 17;\n// const CMD_KEY = 91;\n\nconst Controls = ({ }) => {\n    const controls = React.useRef();\n    const { camera, gl } = useThree();\n\n\n    // https://discourse.threejs.org/t/how-to-limit-pan-in-orbitcontrols-for-orthographiccamera/9061/15\n\n    var minPan = new THREE.Vector3(-2, -2, -15);\n    var maxPan = new THREE.Vector3(2, 2, 50);\n    var _v = new THREE.Vector3();\n\n    //  controls.addEventListener('change', function () {\n    //    _v.copy(controls.target);\n    //    controls.target.clamp(minPan, maxPan);\n    //    _v.sub(controls.target);\n    //    camera.position.sub(_v);\n    //  });\n\n    const limitControls = (e) => {\n      _v.copy(controls.target);\n      controls.target.clamp(minPan, maxPan);\n      _v.sub(controls.target);\n      camera.position.sub(_v);\n    }\n\n  useFrame(() => {\n    controls.current.update();\n  });\n\n\n    return (\n      <trackballControls\n        onChange={(e) => limitControls(e)}\n        ref={controls}\n        args={[camera, gl.domElement]}\n        dynamicDampingFactor={0.5}\n        zoomSpeed={0.5}\n        minDistance={43}\n        maxDistance={50}\n        mouseButtons={{\n          LEFT: THREE.MOUSE.PAN, // make pan the default instead of rotate\n          MIDDLE: THREE.MOUSE.ZOOM,\n          RIGHT: THREE.MOUSE.ROTATE,\n        }}\n      />\n    );\n};\n\nexport default Controls;\n"]},"metadata":{},"sourceType":"module"}