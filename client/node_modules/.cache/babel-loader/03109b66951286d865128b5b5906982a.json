{"ast":null,"code":"import RestService from \"../services/RestService\";\nimport { decorate, observable, action } from \"mobx\";\nimport Ancestor from \"../models/AncestorModel\";\n\nclass AncestorStore {\n  constructor(rootStore) {\n    this.loadAllAncestors = async () => {\n      const jsonAncestors = await this.ancestorsService.getAll();\n      jsonAncestors.forEach(json => this.updateAncestorFromServer(json));\n    };\n\n    this.addAncestor = ancestor => {\n      this.ancestors.push(ancestor);\n    };\n\n    this.rootStore = rootStore;\n    this.ancestors = [];\n    this.ancestorsService = new RestService('ancestors');\n  }\n\n  updateAncestorFromServer(json) {\n    let ancestor = this.ancestors.find(ancestor => ancestor.id === json.id);\n\n    if (!ancestor) {\n      ancestor = new Ancestor({\n        id: json.id,\n        store: this.rootStore.ancestorStore\n      });\n    }\n\n    if (json.isDeleted) {\n      this.ancestors.remove(ancestor);\n    } else {\n      ancestor.updateFromJson(json);\n    }\n\n    return ancestor;\n  }\n\n}\n\ndecorate(AncestorStore, {\n  ancestors: observable,\n  addAncestor: action,\n  updateAncestorFromServer: action\n});\nexport default AncestorStore;","map":{"version":3,"sources":["/Users/sarahvandenberghe/School/Devine/20192020/Integration-4/INT4_Group6/client/src/stores/AncestorStore.js"],"names":["RestService","decorate","observable","action","Ancestor","AncestorStore","constructor","rootStore","loadAllAncestors","jsonAncestors","ancestorsService","getAll","forEach","json","updateAncestorFromServer","addAncestor","ancestor","ancestors","push","find","id","store","ancestorStore","isDeleted","remove","updateFromJson"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,yBAAxB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,MAA/B,QAA6C,MAA7C;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,aAAN,CAAoB;AAClBC,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA,SAMvBC,gBANuB,GAMJ,YAAY;AAC7B,YAAMC,aAAa,GAAG,MAAM,KAAKC,gBAAL,CAAsBC,MAAtB,EAA5B;AACAF,MAAAA,aAAa,CAACG,OAAd,CAAuBC,IAAD,IAAU,KAAKC,wBAAL,CAA8BD,IAA9B,CAAhC;AACD,KATsB;;AAAA,SAWvBE,WAXuB,GAWRC,QAAD,IAAc;AAC1B,WAAKC,SAAL,CAAeC,IAAf,CAAoBF,QAApB;AACD,KAbsB;;AACrB,SAAKT,SAAL,GAAiBA,SAAjB;AACA,SAAKU,SAAL,GAAiB,EAAjB;AACA,SAAKP,gBAAL,GAAwB,IAAIV,WAAJ,CAAgB,WAAhB,CAAxB;AACD;;AAWDc,EAAAA,wBAAwB,CAACD,IAAD,EAAO;AAC7B,QAAIG,QAAQ,GAAG,KAAKC,SAAL,CAAeE,IAAf,CAAqBH,QAAD,IAAcA,QAAQ,CAACI,EAAT,KAAgBP,IAAI,CAACO,EAAvD,CAAf;;AACA,QAAI,CAACJ,QAAL,EAAe;AACbA,MAAAA,QAAQ,GAAG,IAAIZ,QAAJ,CAAa;AACtBgB,QAAAA,EAAE,EAAEP,IAAI,CAACO,EADa;AAEtBC,QAAAA,KAAK,EAAE,KAAKd,SAAL,CAAee;AAFA,OAAb,CAAX;AAID;;AACD,QAAIT,IAAI,CAACU,SAAT,EAAoB;AAClB,WAAKN,SAAL,CAAeO,MAAf,CAAsBR,QAAtB;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAACS,cAAT,CAAwBZ,IAAxB;AACD;;AACD,WAAOG,QAAP;AACD;;AA9BiB;;AAiCpBf,QAAQ,CAACI,aAAD,EAAgB;AACtBY,EAAAA,SAAS,EAAEf,UADW;AAEtBa,EAAAA,WAAW,EAAEZ,MAFS;AAGtBW,EAAAA,wBAAwB,EAAEX;AAHJ,CAAhB,CAAR;AAMA,eAAeE,aAAf","sourcesContent":["import RestService from \"../services/RestService\";\nimport { decorate, observable, action } from \"mobx\";\nimport Ancestor from \"../models/AncestorModel\";\n\nclass AncestorStore {\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.ancestors = [];\n    this.ancestorsService = new RestService('ancestors');\n  }\n\n  loadAllAncestors = async () => {\n    const jsonAncestors = await this.ancestorsService.getAll();\n    jsonAncestors.forEach((json) => this.updateAncestorFromServer(json));\n  };\n\n  addAncestor = (ancestor) => {\n    this.ancestors.push(ancestor);\n  };\n\n  updateAncestorFromServer(json) {\n    let ancestor = this.ancestors.find((ancestor) => ancestor.id === json.id);\n    if (!ancestor) {\n      ancestor = new Ancestor({\n        id: json.id,\n        store: this.rootStore.ancestorStore,\n      });\n    }\n    if (json.isDeleted) {\n      this.ancestors.remove(ancestor);\n    } else {\n      ancestor.updateFromJson(json);\n    }\n    return ancestor;\n  }\n}\n\ndecorate(AncestorStore, {\n  ancestors: observable,\n  addAncestor: action,\n  updateAncestorFromServer: action,\n});\n\nexport default AncestorStore;\n"]},"metadata":{},"sourceType":"module"}