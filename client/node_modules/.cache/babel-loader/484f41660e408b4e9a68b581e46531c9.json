{"ast":null,"code":"import delay from '../utils/delay';\nconst REST_DELAY = parseInt(process.env.REACT_APP_REST_DELAY) || 0;\n\nclass RestService {\n  constructor(_entity) {\n    this.entity = ``;\n    this.url = `/api`;\n\n    this.getAll = async () => {\n      await delay(REST_DELAY);\n      const r = await fetch(`${this.url}/${this.entity}`);\n      return await r.json();\n    };\n\n    this.getById = async (id, relatedEntityPlural = false) => {\n      await delay(REST_DELAY);\n      const url = relatedEntityPlural ? `${this.url}/${this.entity}/${id}/${relatedEntityPlural}` : `${this.url}/${this.entity}/${id}`;\n      const r = await fetch(url);\n\n      if (!r.ok) {\n        const error = new Error(r.statusText || r.status);\n        error.response = r;\n        throw error;\n      }\n\n      return await r.json();\n    };\n\n    this.create = async entity => {\n      await delay(REST_DELAY);\n      const options = this.getOptions(`post`, entity);\n      const r = await fetch(`${this.url}/${this.entity}`, options);\n      return await r.json();\n    };\n\n    this.update = async entity => {\n      await delay(REST_DELAY);\n\n      try {\n        const r = await fetch(`${this.url}/${this.entity}/${entity.id}`, this.getOptions(`put`, entity));\n        return await r.json();\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    this.updateLinked = async (entity, relatedEntityPlural) => {\n      await delay(REST_DELAY);\n\n      try {\n        const r = await fetch(`${this.url}/${this.entity}/${entity.id}/${relatedEntityPlural}`, this.getOptions(`put`, entity));\n        return await r.json();\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    this.delete = async entity => {\n      await delay(REST_DELAY);\n\n      try {\n        const r = await fetch(`${this.url}/${this.entity}/${entity.id}`, this.getOptions(`delete`));\n        return await {\n          isDeleted: true,\n          id: entity.id,\n          ...r.json()\n        };\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    this.getOptions = (method, body = null) => {\n      const options = {\n        method: method.toUpperCase(),\n        headers: {\n          \"content-type\": `application/json`\n        }\n      };\n\n      if (body) {\n        options.body = JSON.stringify(body);\n      }\n\n      return options;\n    };\n\n    this.entity = _entity;\n  }\n\n}\n\nexport default RestService;","map":{"version":3,"sources":["/Users/sarahvandenberghe/School/Devine/20192020/Integration-4/INT4_Group6/client/src/services/RestService.js"],"names":["delay","REST_DELAY","parseInt","process","env","REACT_APP_REST_DELAY","RestService","constructor","entity","url","getAll","r","fetch","json","getById","id","relatedEntityPlural","ok","error","Error","statusText","status","response","create","options","getOptions","update","err","console","updateLinked","delete","isDeleted","method","body","toUpperCase","headers","JSON","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,UAAU,GAAGC,QAAQ,CAACC,OAAO,CAACC,GAAR,CAAYC,oBAAb,CAAR,IAA8C,CAAjE;;AAEA,MAAMC,WAAN,CAAkB;AAIhBC,EAAAA,WAAW,CAACC,OAAD,EAAS;AAAA,SAHpBA,MAGoB,GAHV,EAGU;AAAA,SAFpBC,GAEoB,GAFb,MAEa;;AAAA,SAIpBC,MAJoB,GAIX,YAAY;AACnB,YAAMV,KAAK,CAACC,UAAD,CAAX;AACA,YAAMU,CAAC,GAAG,MAAMC,KAAK,CAAE,GAAE,KAAKH,GAAI,IAAG,KAAKD,MAAO,EAA5B,CAArB;AACA,aAAO,MAAMG,CAAC,CAACE,IAAF,EAAb;AACD,KARmB;;AAAA,SAUpBC,OAVoB,GAUV,OAAOC,EAAP,EAAWC,mBAAmB,GAAG,KAAjC,KAA2C;AACnD,YAAMhB,KAAK,CAACC,UAAD,CAAX;AACA,YAAMQ,GAAG,GAAIO,mBAAD,GAAyB,GAAE,KAAKP,GAAI,IAAG,KAAKD,MAAO,IAAGO,EAAG,IAAGC,mBAAoB,EAAhF,GAAqF,GAAE,KAAKP,GAAI,IAAG,KAAKD,MAAO,IAAGO,EAAG,EAAjI;AACA,YAAMJ,CAAC,GAAG,MAAMC,KAAK,CAACH,GAAD,CAArB;;AACA,UAAI,CAACE,CAAC,CAACM,EAAP,EAAW;AACT,cAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAUR,CAAC,CAACS,UAAF,IAAgBT,CAAC,CAACU,MAA5B,CAAd;AACAH,QAAAA,KAAK,CAACI,QAAN,GAAiBX,CAAjB;AACA,cAAMO,KAAN;AACD;;AACD,aAAO,MAAMP,CAAC,CAACE,IAAF,EAAb;AACD,KApBmB;;AAAA,SAsBpBU,MAtBoB,GAsBX,MAAMf,MAAN,IAAgB;AACvB,YAAMR,KAAK,CAACC,UAAD,CAAX;AACA,YAAMuB,OAAO,GAAG,KAAKC,UAAL,CAAiB,MAAjB,EAAwBjB,MAAxB,CAAhB;AACA,YAAMG,CAAC,GAAG,MAAMC,KAAK,CAAE,GAAE,KAAKH,GAAI,IAAG,KAAKD,MAAO,EAA5B,EAA+BgB,OAA/B,CAArB;AACA,aAAO,MAAMb,CAAC,CAACE,IAAF,EAAb;AACD,KA3BmB;;AAAA,SA6BpBa,MA7BoB,GA6BX,MAAMlB,MAAN,IAAgB;AACvB,YAAMR,KAAK,CAACC,UAAD,CAAX;;AACA,UAAI;AACF,cAAMU,CAAC,GAAG,MAAMC,KAAK,CAClB,GAAE,KAAKH,GAAI,IAAG,KAAKD,MAAO,IAAGA,MAAM,CAACO,EAAG,EADrB,EAEnB,KAAKU,UAAL,CAAiB,KAAjB,EAAuBjB,MAAvB,CAFmB,CAArB;AAIA,eAAO,MAAMG,CAAC,CAACE,IAAF,EAAb;AACD,OAND,CAME,OAAOc,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACV,KAAR,CAAcS,GAAd;AACD;AACF,KAxCmB;;AAAA,SA0CpBE,YA1CoB,GA0CL,OAAOrB,MAAP,EAAeQ,mBAAf,KAAuC;AACpD,YAAMhB,KAAK,CAACC,UAAD,CAAX;;AACA,UAAI;AACF,cAAMU,CAAC,GAAG,MAAMC,KAAK,CAClB,GAAE,KAAKH,GAAI,IAAG,KAAKD,MAAO,IAAGA,MAAM,CAACO,EAAG,IAAGC,mBAAoB,EAD5C,EAEnB,KAAKS,UAAL,CAAiB,KAAjB,EAAuBjB,MAAvB,CAFmB,CAArB;AAIA,eAAO,MAAMG,CAAC,CAACE,IAAF,EAAb;AACD,OAND,CAME,OAAOc,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACV,KAAR,CAAcS,GAAd;AACD;AACF,KArDmB;;AAAA,SAuDpBG,MAvDoB,GAuDX,MAAMtB,MAAN,IAAgB;AACvB,YAAMR,KAAK,CAACC,UAAD,CAAX;;AACA,UAAI;AACF,cAAMU,CAAC,GAAG,MAAMC,KAAK,CAClB,GAAE,KAAKH,GAAI,IAAG,KAAKD,MAAO,IAAGA,MAAM,CAACO,EAAG,EADrB,EAEnB,KAAKU,UAAL,CAAiB,QAAjB,CAFmB,CAArB;AAIA,eAAO,MAAM;AAAEM,UAAAA,SAAS,EAAE,IAAb;AAAmBhB,UAAAA,EAAE,EAAEP,MAAM,CAACO,EAA9B;AAAkC,aAAGJ,CAAC,CAACE,IAAF;AAArC,SAAb;AACD,OAND,CAME,OAAOc,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACV,KAAR,CAAcS,GAAd;AACD;AACF,KAlEmB;;AAAA,SAoEpBF,UApEoB,GAoEP,CAACO,MAAD,EAASC,IAAI,GAAG,IAAhB,KAAyB;AACpC,YAAMT,OAAO,GAAG;AACdQ,QAAAA,MAAM,EAAEA,MAAM,CAACE,WAAP,EADM;AAEdC,QAAAA,OAAO,EAAE;AACP,0BAAiB;AADV;AAFK,OAAhB;;AAMA,UAAIF,IAAJ,EAAU;AACRT,QAAAA,OAAO,CAACS,IAAR,GAAeG,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAf;AACD;;AACD,aAAOT,OAAP;AACD,KA/EmB;;AAClB,SAAKhB,MAAL,GAAcA,OAAd;AACD;;AANe;;AAqFlB,eAAeF,WAAf","sourcesContent":["import delay from '../utils/delay';\n\nconst REST_DELAY = parseInt(process.env.REACT_APP_REST_DELAY) || 0;\n\nclass RestService {\n  entity = ``;\n  url = `/api`;\n\n  constructor(entity) {\n    this.entity = entity;\n  }\n\n  getAll = async () => {\n    await delay(REST_DELAY);\n    const r = await fetch(`${this.url}/${this.entity}`);\n    return await r.json();\n  };\n\n  getById = async (id, relatedEntityPlural = false) => {\n    await delay(REST_DELAY);\n    const url = (relatedEntityPlural) ? `${this.url}/${this.entity}/${id}/${relatedEntityPlural}` : `${this.url}/${this.entity}/${id}`;\n    const r = await fetch(url);\n    if (!r.ok) {\n      const error = new Error(r.statusText || r.status);\n      error.response = r;\n      throw error;\n    }\n    return await r.json();\n  };\n\n  create = async entity => {\n    await delay(REST_DELAY);\n    const options = this.getOptions(`post`, entity);\n    const r = await fetch(`${this.url}/${this.entity}`, options);\n    return await r.json();\n  };\n\n  update = async entity => {\n    await delay(REST_DELAY);\n    try {\n      const r = await fetch(\n        `${this.url}/${this.entity}/${entity.id}`,\n        this.getOptions(`put`, entity)\n      );\n      return await r.json();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  updateLinked = async (entity, relatedEntityPlural) => {\n    await delay(REST_DELAY);\n    try {\n      const r = await fetch(\n        `${this.url}/${this.entity}/${entity.id}/${relatedEntityPlural}`,\n        this.getOptions(`put`, entity)\n      );\n      return await r.json();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  delete = async entity => {\n    await delay(REST_DELAY);\n    try {\n      const r = await fetch(\n        `${this.url}/${this.entity}/${entity.id}`,\n        this.getOptions(`delete`)\n      );\n      return await { isDeleted: true, id: entity.id, ...r.json() };\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  getOptions = (method, body = null) => {\n    const options = {\n      method: method.toUpperCase(),\n      headers: {\n        \"content-type\": `application/json`\n      }\n    };\n    if (body) {\n      options.body = JSON.stringify(body);\n    }\n    return options;\n  };\n}\nexport default RestService;\n"]},"metadata":{},"sourceType":"module"}